<?xml version="1.0"	encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"	
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatting">
	<select id="getAdminList" resultType="adminDTO" parameterType="integer">
		SELECT u.u_no AS admin_no, u.u_nickname AS admin_nickname, c.room_count
		FROM user u
		LEFT JOIN chattingRoom c
		ON u.u_no = c.admin_no AND c.user_no = #{u_no}
		WHERE u.u_grade = 2 OR u.u_grade = 1;
	</select>
	
	<select id="getRoomList" parameterType="integer" resultType="chattingRoomDTO">
		SELECT c.*, (SELECT u_nickname FROM user u WHERE c.user_no = u.u_no) AS user_nickname
      		,(SELECT u_nickname FROM user u WHERE c.admin_no = u.u_no) AS admin_nickname
		FROM chattingRoom c
		WHERE admin_no = #{u_no}
	</select>
	
	<select id="getChattingList" parameterType="map" resultType="chatDTO">
		SELECT chat_no, chat_msg, DATE_FORMAT(chat_date,'%Y-%m-%d %H:%i:%s') as chat_date, u_no, room_no
		FROM chat
		WHERE room_no = (SELECT room_no FROM chattingRoom WHERE (user_no = #{to} AND admin_no = #{from}) OR (user_no = #{from} AND admin_no = #{to}))
	</select>
	
	<select id="containRoom" parameterType="map" resultType="integer">
		SELECT COUNT(*)
		FROM chattingRoom
		WHERE user_no = (SELECT u_no FROM user WHERE u_no = #{to}) AND admin_no = (SELECT u_no FROM user WHERE u_no = #{from})
	</select>
	
	<insert id="createRoom" parameterType="map">
		INSERT INTO chattingRoom(user_no, admin_no)
		VALUES(#{to}, #{from})
	</insert>
	
	<insert id="addChatting" parameterType="map">
		INSERT INTO chat(chat_msg, u_no, room_no)
		VALUES(#{message}, #{sender_no}, (SELECT room_no FROM chattingRoom WHERE (user_no = #{sender_no} AND admin_no = #{receive_no}) OR (user_no = #{receive_no} AND admin_no = #{sender_no})))
		<selectKey keyColumn="chat_date" keyProperty="chat_date" order="AFTER" resultType="java.sql.Timestamp">
			SELECT chat_date FROM chat WHERE chat_no = LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<select id="getAdminNo" parameterType="string" resultType="integer">
		SELECT u_no FROM user WHERE u_nickname = #{receive}
	</select>
	
	<update id="setRoomCountMinus" parameterType="map">
		<![CDATA[
			UPDATE chattingRoom SET room_count = IF(room_count>0,-1, room_count - 1), room_lastChattingTime = TIMESTAMP #{chat_date}
			WHERE room_no = (SELECT room_no FROM chattingRoom WHERE (user_no = #{sender_no} AND admin_no = #{receive_no}) OR (user_no = #{receive_no} AND admin_no = #{sender_no}))
		]]>
	</update>
	
	<update id="setRoomCountPlus" parameterType="map">
		<![CDATA[
			UPDATE chattingRoom SET room_count = IF(room_count<0,1, room_count + 1), room_lastChattingTime = TIMESTAMP #{chat_date}
			WHERE room_no = (SELECT room_no FROM chattingRoom WHERE (user_no = #{sender_no} AND admin_no = #{receive_no}) OR (user_no = #{receive_no} AND admin_no = #{sender_no}))
		]]>
	</update>
</mapper>